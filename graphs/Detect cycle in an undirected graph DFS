class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool solver(int index,int parent,vector<int>adj[],vector<int>&vis){
        vis[index]=1;
        // par[index]=parent;
        for(auto it:adj[index]){
            if(!vis[it]){
                if(solver(it,index,adj,vis)==true)return true;
            }else{
                if(it!=parent)return true;
            }
        }
        return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        // vector<int>par(V,-1);
        vector<int>vis(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(solver(i,-1,adj,vis)==true)return true;
            }
        }
        return false;
    }
};
