int helper(int ind,int n,vector<int> &price,vector<vector<int>>&dp){
	if(ind==0){
		return n*price[0];
	}
	if(dp[ind][n]!=-1)return dp[ind][n];
	int nottake=helper(ind-1,n,price,dp);
	int take=INT_MIN;
	int rodlenght=ind+1;
	if(rodlenght<=n)take=price[ind]+helper(ind,n-rodlenght,price,dp);
	return dp[ind][n]=max(take,nottake);
}

int cutRod(vector<int> &price, int n)
{
	// Write your code here.
	vector<vector<int>>dp(price.size(),vector<int>(n+1,-1));
	return helper(price.size()-1,n,price,dp);
}
