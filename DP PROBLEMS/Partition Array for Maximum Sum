#include <bits/stdc++.h> 
int helper(int ind,int n,vector<int> &num, int k,vector<int>&dp){
    if(ind==n)return 0;
    if(dp[ind]!=-1)return dp[ind];
    int ans=INT_MIN;
    int len=0;
    int maxi=INT_MIN;
    for(int j=ind;j<min(n,ind+k);j++){
        len++;
        maxi=max(maxi,num[j]);
        int sub=(maxi*len)+helper(j+1,n,num,k,dp);
        ans=max(ans,sub);        
    }
    return dp[ind]=ans;
}
int maximumSubarray(vector<int> &num, int k)
{
    int n=num.size();
    // vector<int>dp(n+1,-1);
    // return (helper(0,num.size(),num,k,dp));

    vector<int>dp(n+1,0);
    for(int ind=n-1;ind>=0;ind--){
          int ans=INT_MIN;
    int len=0;
    int maxi=INT_MIN;
    for(int j=ind;j<min(n,ind+k);j++){
        len++;
        maxi=max(maxi,num[j]);
        int sub=(maxi*len)+dp[j+1];
        ans=max(ans,sub);        
    }
   dp[ind]=ans;

    }
    return dp[0];

}
