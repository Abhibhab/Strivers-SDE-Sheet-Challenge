#include <bits/stdc++.h>
int helper(int i,int j,int* arr,vector<vector<int>>&dp){
    if(i==j)return 0;
    if(dp[i][j]!=-1)return dp[i][j];
    int ans=INT_MAX;
    for(int k=i;k<=j-1;k++){
        int temp=(arr[i-1]*arr[k]*arr[j])+helper(i,k,arr,dp)+
        helper(k+1,j,arr,dp);
        ans=min(ans,temp);
    }
    return dp[i][j]=ans;
}


int matrixChainMultiplication(int* arr, int n) {
    // Write your code here
    // vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
    // return helper(1,n,arr,dp);

    vector<vector<int>>dp(n+1,vector<int>(n+1,0));
    for(int i=n;i>=1;i--){
        for(int j=i+1;j<=n;j++){
            int ans=INT_MAX;
            for(int k=i;k<=j-1;k++){
                int temp=(arr[i-1]*arr[k]*arr[j])+dp[i][k]+dp[k+1][j];
                ans=min(ans,temp);
            }
           dp[i][j]=ans;


        }
    }
    return dp[1][n];


    
 
}
