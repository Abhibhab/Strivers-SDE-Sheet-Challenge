int helper(int i,int j1,int j2,int n,int m,vector<vector<int>> &grid, vector<vector<vector<int>>>&dp){
    if(j1<0 || j2<0 || j1>=m || j2>=m)return -1e9;
    if(i==n-1){
        if(j1==j2)return grid[i][j1];
        else return grid[i][j1]+grid[i][j2];
    }
    if(dp[i][j1][j2]!=-1)return dp[i][j1][j2];
    int ans=INT_MIN;
    for(int ii=-1;ii<=1;ii++){
        for(int jj=-1;jj<=1;jj++){
            if(j1==j2){
                ans=max(ans,grid[i][j1]+helper(i+1,j1+ii,j2+jj,n,m,grid,dp));
            }else{
                ans=max(ans,grid[i][j1]+grid[i][j2]+helper(i+1,j1+ii,j2+jj,n,m,grid,dp));

            }

        }
    }
    return  dp[i][j1][j2]=ans;

}

int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
    // Write your code here.
    vector<vector<vector<int>>>dp(r,vector<vector<int>>(c,vector<int>(c,-1)));
    return helper(0,0,c-1,r,c,grid,dp);
}
