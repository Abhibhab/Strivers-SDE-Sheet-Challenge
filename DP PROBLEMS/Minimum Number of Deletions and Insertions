#include <bits/stdc++.h> 
int lcs(string s, string t)
{
	int n=s.size();
	int m=t.size();
	// vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
	// return helper(s.size(),t.size(),s,t,dp);
	// vector<vector<int>>dp(n+1,vector<int>(m+1,0));
	vector<int>prev(m+1,0),curr(m+1,0);
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(s[i-1]==t[j-1])curr[j]=1+prev[j-1];
			else{
				curr[j]=max(prev[j],curr[j-1]);
			}
		}
		prev=curr;
	}
	return curr[m];

	//Write your code here
}
int canYouMake(string &str, string &ptr)
{
    // Write your code here.
    int helo=lcs(str,ptr);
    return(str.size()+ptr.size()-2*helo);
}
