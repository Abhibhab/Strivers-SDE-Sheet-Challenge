#include <bits/stdc++.h> 
int helper(int ind,int x,vector<int>&num,  vector<vector<int>>&dp){
    if(ind==0){
        if(x%num[ind]==0)return (x/num[ind]);
        else return 1e9;
    }
    if(dp[ind][x]!=-1)return dp[ind][x];
    int nottake=0+helper(ind-1,x,num,dp);
    int take=INT_MAX;
    if(x>=num[ind])take=1+helper(ind,x-num[ind],num,dp);
    return dp[ind][x]=min(take,nottake);
}
int minimumElements(vector<int> &num, int X)
{
    // Write your code here.
    int n=num.size();
    // vector<vector<int>>dp(n,vector<int>(x+1,-1));
    // int i= helper(num.size()-1,x,num,dp);
    // if(i>=1e9)return -1;
    // else return i;
    //TABULATION
    vector<vector<int>>dp(n,vector<int>(X+1,0));
    for(int x=0;x<=X;x++){
        if(x%num[0]==0){
            dp[0][x]=(x/num[0]);
        }else{
            dp[0][x]=1e9;
        }
    }
    for(int ind=1;ind<n;ind++){
        for(int x=0;x<=X;x++){
                int nottake=0+dp[ind-1][x];
    int take=INT_MAX;
    if(x>=num[ind])take=1+dp[ind][x-num[ind]];
    dp[ind][x]=min(take,nottake);
}

        }
    
        int i= dp[n-1][X];
    if(i>=1e9)return -1;
    else return i;
    
}
